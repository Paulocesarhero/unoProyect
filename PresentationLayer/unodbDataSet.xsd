<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="unodbDataSet" targetNamespace="http://tempuri.org/unodbDataSet.xsd" xmlns:mstns="http://tempuri.org/unodbDataSet.xsd" xmlns="http://tempuri.org/unodbDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="unodbConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="unodbConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.PresentationLayer.Properties.Settings.GlobalReference.Default.unodbConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="credentialsSetTableAdapter" GeneratorDataComponentClassName="credentialsSetTableAdapter" Name="credentialsSet" UserDataComponentName="credentialsSetTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="unodbConnectionString (Settings)" DbObjectName="unodb.dbo.credentialsSet" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[credentialsSet] WHERE (([Id] = @Original_Id) AND ([player_IdPlayer] = @Original_player_IdPlayer))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_player_IdPlayer" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="player_IdPlayer" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[credentialsSet] ([password], [username], [email], [player_IdPlayer]) VALUES (@password, @username, @email, @player_IdPlayer);
SELECT Id, password, username, email, player_IdPlayer FROM credentialsSet WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@email" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@player_IdPlayer" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="player_IdPlayer" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, password, username, email, player_IdPlayer FROM dbo.credentialsSet</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[credentialsSet] SET [password] = @password, [username] = @username, [email] = @email, [player_IdPlayer] = @player_IdPlayer WHERE (([Id] = @Original_Id) AND ([player_IdPlayer] = @Original_player_IdPlayer));
SELECT Id, password, username, email, player_IdPlayer FROM credentialsSet WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@email" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@player_IdPlayer" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="player_IdPlayer" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_player_IdPlayer" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="player_IdPlayer" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="unodb.dbo.credentialsSet" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="password" DataSetColumn="password" />
              <Mapping SourceColumn="username" DataSetColumn="username" />
              <Mapping SourceColumn="email" DataSetColumn="email" />
              <Mapping SourceColumn="player_IdPlayer" DataSetColumn="player_IdPlayer" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="imagesSetTableAdapter" GeneratorDataComponentClassName="imagesSetTableAdapter" Name="imagesSet" UserDataComponentName="imagesSetTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="unodbConnectionString (Settings)" DbObjectName="unodb.dbo.imagesSet" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[imagesSet] WHERE (([Id] = @Original_Id) AND ([player_IdPlayer] = @Original_player_IdPlayer))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_player_IdPlayer" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="player_IdPlayer" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[imagesSet] ([path], [player_IdPlayer]) VALUES (@path, @player_IdPlayer);
SELECT Id, path, player_IdPlayer FROM imagesSet WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@path" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="path" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@player_IdPlayer" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="player_IdPlayer" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, path, player_IdPlayer FROM dbo.imagesSet</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[imagesSet] SET [path] = @path, [player_IdPlayer] = @player_IdPlayer WHERE (([Id] = @Original_Id) AND ([player_IdPlayer] = @Original_player_IdPlayer));
SELECT Id, path, player_IdPlayer FROM imagesSet WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@path" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="path" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@player_IdPlayer" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="player_IdPlayer" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_player_IdPlayer" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="player_IdPlayer" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="unodb.dbo.imagesSet" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="path" DataSetColumn="path" />
              <Mapping SourceColumn="player_IdPlayer" DataSetColumn="player_IdPlayer" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="playerSetTableAdapter" GeneratorDataComponentClassName="playerSetTableAdapter" Name="playerSet" UserDataComponentName="playerSetTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="unodbConnectionString (Settings)" DbObjectName="unodb.dbo.playerSet" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[playerSet] WHERE (([IdPlayer] = @Original_IdPlayer) AND ([player2_IdPlayer] = @Original_player2_IdPlayer))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdPlayer" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdPlayer" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_player2_IdPlayer" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="player2_IdPlayer" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[playerSet] ([wins], [losts], [player2_IdPlayer]) VALUES (@wins, @losts, @player2_IdPlayer);
SELECT IdPlayer, wins, losts, player2_IdPlayer FROM playerSet WHERE (IdPlayer = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@wins" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="wins" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@losts" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="losts" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@player2_IdPlayer" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="player2_IdPlayer" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IdPlayer, wins, losts, player2_IdPlayer FROM dbo.playerSet</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[playerSet] SET [wins] = @wins, [losts] = @losts, [player2_IdPlayer] = @player2_IdPlayer WHERE (([IdPlayer] = @Original_IdPlayer) AND ([player2_IdPlayer] = @Original_player2_IdPlayer));
SELECT IdPlayer, wins, losts, player2_IdPlayer FROM playerSet WHERE (IdPlayer = @IdPlayer)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@wins" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="wins" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@losts" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="losts" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@player2_IdPlayer" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="player2_IdPlayer" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdPlayer" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdPlayer" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_player2_IdPlayer" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="player2_IdPlayer" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="IdPlayer" ColumnName="IdPlayer" DataSourceName="unodb.dbo.playerSet" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IdPlayer" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="IdPlayer" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IdPlayer" DataSetColumn="IdPlayer" />
              <Mapping SourceColumn="wins" DataSetColumn="wins" />
              <Mapping SourceColumn="losts" DataSetColumn="losts" />
              <Mapping SourceColumn="player2_IdPlayer" DataSetColumn="player2_IdPlayer" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="unodbDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="unodbDataSet" msprop:Generator_DataSetName="unodbDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="credentialsSet" msprop:Generator_RowEvHandlerName="credentialsSetRowChangeEventHandler" msprop:Generator_RowDeletedName="credentialsSetRowDeleted" msprop:Generator_RowDeletingName="credentialsSetRowDeleting" msprop:Generator_RowEvArgName="credentialsSetRowChangeEvent" msprop:Generator_TablePropName="credentialsSet" msprop:Generator_RowChangedName="credentialsSetRowChanged" msprop:Generator_RowChangingName="credentialsSetRowChanging" msprop:Generator_TableClassName="credentialsSetDataTable" msprop:Generator_RowClassName="credentialsSetRow" msprop:Generator_TableVarName="tablecredentialsSet" msprop:Generator_UserTableName="credentialsSet">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="password" msprop:Generator_ColumnPropNameInRow="password" msprop:Generator_ColumnPropNameInTable="passwordColumn" msprop:Generator_ColumnVarNameInTable="columnpassword" msprop:Generator_UserColumnName="password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="username" msprop:Generator_ColumnPropNameInRow="username" msprop:Generator_ColumnPropNameInTable="usernameColumn" msprop:Generator_ColumnVarNameInTable="columnusername" msprop:Generator_UserColumnName="username">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="email" msprop:Generator_ColumnPropNameInRow="email" msprop:Generator_ColumnPropNameInTable="emailColumn" msprop:Generator_ColumnVarNameInTable="columnemail" msprop:Generator_UserColumnName="email">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="player_IdPlayer" msprop:Generator_ColumnPropNameInRow="player_IdPlayer" msprop:Generator_ColumnPropNameInTable="player_IdPlayerColumn" msprop:Generator_ColumnVarNameInTable="columnplayer_IdPlayer" msprop:Generator_UserColumnName="player_IdPlayer" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="imagesSet" msprop:Generator_RowEvHandlerName="imagesSetRowChangeEventHandler" msprop:Generator_RowDeletedName="imagesSetRowDeleted" msprop:Generator_RowDeletingName="imagesSetRowDeleting" msprop:Generator_RowEvArgName="imagesSetRowChangeEvent" msprop:Generator_TablePropName="imagesSet" msprop:Generator_RowChangedName="imagesSetRowChanged" msprop:Generator_RowChangingName="imagesSetRowChanging" msprop:Generator_TableClassName="imagesSetDataTable" msprop:Generator_RowClassName="imagesSetRow" msprop:Generator_TableVarName="tableimagesSet" msprop:Generator_UserTableName="imagesSet">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="path" msprop:Generator_ColumnPropNameInRow="path" msprop:Generator_ColumnPropNameInTable="pathColumn" msprop:Generator_ColumnVarNameInTable="columnpath" msprop:Generator_UserColumnName="path">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="player_IdPlayer" msprop:Generator_ColumnPropNameInRow="player_IdPlayer" msprop:Generator_ColumnPropNameInTable="player_IdPlayerColumn" msprop:Generator_ColumnVarNameInTable="columnplayer_IdPlayer" msprop:Generator_UserColumnName="player_IdPlayer" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="playerSet" msprop:Generator_RowEvHandlerName="playerSetRowChangeEventHandler" msprop:Generator_RowDeletedName="playerSetRowDeleted" msprop:Generator_RowDeletingName="playerSetRowDeleting" msprop:Generator_RowEvArgName="playerSetRowChangeEvent" msprop:Generator_TablePropName="playerSet" msprop:Generator_RowChangedName="playerSetRowChanged" msprop:Generator_RowChangingName="playerSetRowChanging" msprop:Generator_TableClassName="playerSetDataTable" msprop:Generator_RowClassName="playerSetRow" msprop:Generator_TableVarName="tableplayerSet" msprop:Generator_UserTableName="playerSet">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IdPlayer" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="IdPlayer" msprop:Generator_ColumnPropNameInTable="IdPlayerColumn" msprop:Generator_ColumnVarNameInTable="columnIdPlayer" msprop:Generator_UserColumnName="IdPlayer" type="xs:int" />
              <xs:element name="wins" msprop:Generator_ColumnPropNameInRow="wins" msprop:Generator_ColumnPropNameInTable="winsColumn" msprop:Generator_ColumnVarNameInTable="columnwins" msprop:Generator_UserColumnName="wins">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="losts" msprop:Generator_ColumnPropNameInRow="losts" msprop:Generator_ColumnPropNameInTable="lostsColumn" msprop:Generator_ColumnVarNameInTable="columnlosts" msprop:Generator_UserColumnName="losts">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="player2_IdPlayer" msprop:Generator_ColumnPropNameInRow="player2_IdPlayer" msprop:Generator_ColumnPropNameInTable="player2_IdPlayerColumn" msprop:Generator_ColumnVarNameInTable="columnplayer2_IdPlayer" msprop:Generator_UserColumnName="player2_IdPlayer" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:credentialsSet" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="imagesSet_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:imagesSet" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="playerSet_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:playerSet" />
      <xs:field xpath="mstns:IdPlayer" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_credentialsplayer" msdata:parent="playerSet" msdata:child="credentialsSet" msdata:parentkey="IdPlayer" msdata:childkey="player_IdPlayer" msprop:Generator_UserParentTable="playerSet" msprop:Generator_UserChildTable="credentialsSet" msprop:Generator_RelationVarName="relationFK_credentialsplayer" msprop:Generator_UserRelationName="FK_credentialsplayer" msprop:Generator_ChildPropName="GetcredentialsSetRows" msprop:Generator_ParentPropName="playerSetRow" />
      <msdata:Relationship name="FK_imagesplayer" msdata:parent="playerSet" msdata:child="imagesSet" msdata:parentkey="IdPlayer" msdata:childkey="player_IdPlayer" msprop:Generator_UserParentTable="playerSet" msprop:Generator_UserChildTable="imagesSet" msprop:Generator_RelationVarName="relationFK_imagesplayer" msprop:Generator_UserRelationName="FK_imagesplayer" msprop:Generator_ChildPropName="GetimagesSetRows" msprop:Generator_ParentPropName="playerSetRow" />
      <msdata:Relationship name="FK_friends" msdata:parent="playerSet" msdata:child="playerSet" msdata:parentkey="IdPlayer" msdata:childkey="player2_IdPlayer" msprop:Generator_ChildPropName="GetplayerSetRows" msprop:Generator_UserChildTable="playerSet" msprop:Generator_RelationVarName="relationFK_friends" msprop:Generator_UserRelationName="FK_friends" msprop:Generator_UserParentTable="playerSet" msprop:Generator_ParentPropName="playerSetRowParent" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>